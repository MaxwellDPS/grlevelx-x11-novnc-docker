name: Docker Image CI

on:
  push:
    branches:
      - "main"
    tags: "v[0-9]+.[0-9]+.[0-9]+"
    paths:
      - "Dockerfile"
      - "Dockerfile.wine"
      - supervisor/**
      - scripts/**
      - app/**
      - utils/**
  pull_request:
    branches:
      - "main"
    paths:
      - "Dockerfile"
      - "Dockerfile.wine"
      - supervisor/**
      - scripts/**
      - app/**
      - utils/**
  workflow_dispatch:
    inputs:
      new_tag:
        description: "Create and use this tag (e.g. v1.2.3). Leave blank to skip."
        required: false
        default: ""
      push_latest:
        description: Push latest tag
        required: false
        type: boolean
        default: false

# Ensure we can push tags
permissions:
  contents: write
  packages: write

###############################################################################
# Job 1: Build winebase
###############################################################################
jobs:
  build-winebase:
    runs-on: ubuntu-latest
    outputs:
      imageid: ${{ steps.build.outputs.imageid }}
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: ${{ vars.DOCKER_USERNAME }}/winebase
          # generate Docker tags based on the following events/attributes
          tags: |
            type=sha
            type=schedule
            type=ref,event=tag
            type=ref,event=tag,pattern=v*
            type=ref,event=tag,pattern=latest
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value=latest,enable=${{ inputs.push_latest == true }}

      - name: Build & push winebase image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./Dockerfile.wine
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  ###############################################################################
  # Job 2: Build grlevelx (needs winebase)
  ###############################################################################
  build-grlevelx:
    runs-on: ubuntu-latest
    needs: build-winebase  # <-- This ensures grlevelx waits for winebase
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: ${{ vars.DOCKER_USERNAME }}/grlevelx
          # generate Docker tags based on the following events/attributes
          tags: |
            type=sha
            type=schedule
            type=ref,event=tag
            type=ref,event=tag,pattern=v*
            type=ref,event=tag,pattern=latest
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value=latest,enable=${{ inputs.push_latest == true }}

      - name: Build & push grlevelx image
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./Dockerfile
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          build-contexts: winebase=${{ jobs.build-winebase.outputs.imageid }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
