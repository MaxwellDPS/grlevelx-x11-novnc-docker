name: Docker Image CI

on:
  push:
    branches:
      - "master"
    tags: "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches:
      - "master"
  workflow_dispatch:
    inputs:
      new_tag:
        description: "Create and use this tag (e.g. v1.2.3). Leave blank to skip."
        required: false
        default: ""
      push_latest:
        description: "If true, also push 'latest' tag"
        required: false
        default: "false"

# Ensure we can push tags
permissions:
  contents: write

jobs:
  build-docker-images:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: winebase
            dockerfile: Dockerfile.wine
          - name: grlevelx
            dockerfile: Dockerfile

    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      ################################################################
      # Step 1: Optionally create a new Git tag if triggered manually
      ################################################################
      - name: Create git tag (when workflow_dispatch + new_tag)
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.new_tag != '' }}
        run: |
          echo "Creating and pushing tag '${{ github.event.inputs.new_tag }}'..."
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag "${{ github.event.inputs.new_tag }}"
          git push origin "${{ github.event.inputs.new_tag }}"

      ################################################################
      # Step 2: Decide on environment variables for tagging
      ################################################################
      - name: Set environment variables
        id: detect
        run: |
          # Always set short commit SHA for reference
          echo "COMMIT_SHA_SHORT=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV

          # If manually triggered with a new_tag, use that
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && -n "${{ github.event.inputs.new_tag }}" ]]; then
            echo "DOCKER_IMAGE_TAG=${{ github.event.inputs.new_tag }}" >> $GITHUB_ENV

          # If push with a real Git tag, e.g., refs/tags/v1.2.3
          elif [[ "${{ github.event_name }}" == "push" && "${{ github.ref_type }}" == "tag" ]]; then
            echo "DOCKER_IMAGE_TAG=${{ github.ref_name }}" >> $GITHUB_ENV

          # Otherwise, it's either push to a branch or PR
          else
            echo "DOCKER_IMAGE_TAG=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
          fi

          # Decide if we also push the 'latest' tag
          # 1) If we're on push to master
          # 2) Or the user set push_latest=true in workflow_dispatch
          if [[ "${{ github.event_name }}" == "push" && "${{ github.ref_name }}" == "master" ]]; then
            echo "PUSH_LATEST=true" >> $GITHUB_ENV
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ github.event.inputs.push_latest }}" == "true" ]]; then
            echo "PUSH_LATEST=true" >> $GITHUB_ENV
          else
            echo "PUSH_LATEST=false" >> $GITHUB_ENV
          fi

      - name: Show environment
        run: |
          echo "Event Name: ${{ github.event_name }}"
          echo "Commit SHA Short: ${{ env.COMMIT_SHA_SHORT }}"
          echo "Docker Image Tag: ${{ env.DOCKER_IMAGE_TAG }}"
          echo "Push Latest: ${{ env.PUSH_LATEST }}"

      - name: Generate Docker tag list
        id: taglist
        run: |
          # Always include short commit + DOCKER_IMAGE_TAG
          echo "tag_list=${{ secrets.DOCKER_HUB_USER }}/${{ matrix.name }}:${{ env.COMMIT_SHA_SHORT }}" >> $GITHUB_OUTPUT
          echo "tag_list+=$'\n'${{ secrets.DOCKER_HUB_USER }}/${{ matrix.name }}:${{ env.DOCKER_IMAGE_TAG }}" >> $GITHUB_OUTPUT

          # Optionally include the "latest" tag
          if [[ "${{ env.PUSH_LATEST }}" == "true" ]]; then
            echo "tag_list+=$'\n'${{ secrets.DOCKER_HUB_USER }}/${{ matrix.name }}:latest" >> $GITHUB_OUTPUT
          fi

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64

      - name: Build & push ${{ matrix.name }} image
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: ./${{ matrix.dockerfile }}
          platforms: linux/amd64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.taglist.outputs.tag_list }}
