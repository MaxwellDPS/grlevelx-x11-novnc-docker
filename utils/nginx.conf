#------------------------------------------------------------------------------
# Main NGINX Configuration
# Typically found at /etc/nginx/nginx.conf
#------------------------------------------------------------------------------


# Dynamically set the number of worker processes based on available CPU cores
worker_processes  auto;

# Store the PID file
pid        /var/run/nginx.pid;

# Log level: warn, error, info, or debug
error_log  /var/log/nginx/error.log warn;

events {
    # Maximum number of simultaneous connections
    worker_connections  1024;
    # multi_accept on;
}

http {
    #---------------------------------------------------------------------------
    # Basic Settings
    #---------------------------------------------------------------------------

    # Include MIME types
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Hide NGINX version from error pages and headers
    server_tokens off;

    # Log format for better readability
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    # For better performance on file serving
    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;

    # Keepalive settings
    keepalive_timeout  65;

    # Timeouts to reduce slowloris-type attacks
    client_body_timeout   10s;
    client_header_timeout 10s;

    # Limit request body size to prevent large payload attacks (e.g., 10 MB)
    client_max_body_size  10M;

    #---------------------------------------------------------------------------
    # SSL / TLS Configuration
    #---------------------------------------------------------------------------
    # Adjust paths to your certificate and key, if needed, in the server block(s).

    # Use only TLSv1.2 and above
    ssl_protocols TLSv1.2 TLSv1.3;

    # Prefer server cipher order
    ssl_prefer_server_ciphers on;

    # A secure cipher suite (ECDHE for perfect forward secrecy)
    # This is a commonly recommended set, but you should verify compatibility.
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';

    # Disable SSL session tickets if you want to rely on ephemeral keys
    ssl_session_tickets off;

    # HTTP Strict Transport Security (HSTS) can be enabled in the server block:
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    #---------------------------------------------------------------------------
    # Compression
    #---------------------------------------------------------------------------
    # Optionally enable gzip or brotli compression.
    # Remember: never compress already compressed content (images, zips, etc.).
    gzip on;
    gzip_disable "msie6";
    gzip_min_length  10240;
    gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss application/javascript;



    server {
        listen 80;
        server_name _;

        # Optionally, redirect requests from root to /novnc/
        location / {
            # Proxy to your backend NoVNC service (adjust host/port as needed)
            proxy_pass http://127.0.0.1:8081/;
            
            # Required for WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
    
            # Forward original headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Optionally, if you have any timeouts to adjust:
            proxy_read_timeout 3600;
            proxy_send_timeout 3600;
        }

        # Reverse proxy for NoVNC
        location /c2/ {
            # Proxy to your backend NoVNC service (adjust host/port as needed)
            proxy_pass http://127.0.0.1:8080/;
            
            # Required for WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            # Forward original headers
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Optionally, if you have any timeouts to adjust:
            proxy_read_timeout 3600;
            proxy_send_timeout 3600;
        }

        location /supervisor/ {
            # Proxy to Supervisorâ€™s web UI backend (adjust host/port as needed)
            proxy_pass http://127.0.0.1:9001/;

            # Forward original headers for proper logging and security
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Adjust redirects coming from the backend
            proxy_redirect / /supervisor/;

            # Optionally rewrite HTML content:
            # Replace href="/ with href="/supervisor/
            sub_filter 'href="/' 'href="/supervisor/';
            # Replace src="/ with src="/supervisor/
            sub_filter 'src="/' 'src="/supervisor/';
            sub_filter_once off;
        }
    }
}